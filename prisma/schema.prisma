generator client {
  provider = "prisma-client-js"
  // output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UsersRole {
  customer
  admin
  superAdmin
}

enum UserAccountStatus {
  active
  banned
  pendingDelete
  deleted
}

model User {
  id                  String            @id @default(uuid())
  userId              String            @unique
  fullName            String
  email               String            @unique
  password            String
  profile             Profile?
  loggedInDevices     LoggedInDevice[]
  isEmailVerified     Boolean           @default(false)
  emailVerifiedAt     DateTime?
  needsPasswordChange Boolean           @default(false)
  role                UsersRole         @default(customer)
  status              UserAccountStatus @default(active)
  requestDeleteAt     DateTime?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt

  @@map("users")
}

model Profile {
  id        String   @id @default(uuid())
  userId    String   @unique
  picture   String?
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model LoggedInDevice {
  id             String    @id @default(uuid())
  refreshTokenId String    @unique
  userId         String
  user           User      @relation(fields: [userId], references: [id])
  ip             String?
  os             String?
  platform       String?
  browser        String?
  city           String?
  country        String?
  lastUsedAt     DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime

  @@map("logged_in_devices")
}

model BlockedToken {
  id            String @id @default(uuid())
  accessTokenId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime

  @@map("blocked_tokens")
}
